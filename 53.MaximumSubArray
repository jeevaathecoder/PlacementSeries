//Java
class Solution {
    public int maxSubArray(int[] nums) {
      int currentSum=0;
      int maxSum=Integer.MIN_VALUE;

      for(int i=0;i<nums.length; i++){
          currentSum = currentSum + nums[i];

          maxSum=Math.max(currentSum,maxSum);

          if(currentSum<0){
              currentSum=0;
          }
      }
      return maxSum;
    }
}
-------------------------------------------------------------------------

//Python
class Solution:
    def maxSubArray(self, nums):
        current_sum = 0
        max_sum = float('-inf')

        for num in nums:
            current_sum += num
            max_sum = max(current_sum, max_sum)

            if current_sum < 0:
                current_sum = 0

        return max_sum


----------------------------------------------------------------------------

//C program

#include <stdio.h>

int maxSubArray(int* nums, int numsSize) {
    int currentSum = 0;
    int maxSum = INT_MIN;

    for (int i = 0; i < numsSize; i++) {
        currentSum += nums[i];
        maxSum = (currentSum > maxSum) ? currentSum : maxSum;

        if (currentSum < 0) {
            currentSum = 0;
        }
    }

    return maxSum;
}

int main() {
    // Example usage:
    int nums[] = {-2, 1, -3, 4, -1, 2, 1, -5, 4};
    int numsSize = sizeof(nums) / sizeof(nums[0]);
    int result = maxSubArray(nums, numsSize);

    printf("Maximum subarray sum: %d\n", result);

    return 0;
}



-----------------------------------------------------------------------------


//C++ Program


#include <iostream>
#include <vector>

class Solution {
public:
    int maxSubArray(std::vector<int>& nums) {
        int currentSum = 0;
        int maxSum = INT_MIN;

        for (int num : nums) {
            currentSum += num;
            maxSum = std::max(currentSum, maxSum);

            if (currentSum < 0) {
                currentSum = 0;
            }
        }

        return maxSum;
    }
};

int main() {
    // Example usage:
    std::vector<int> nums = {-2, 1, -3, 4, -1, 2, 1, -5, 4};
    Solution solution;
    int result = solution.maxSubArray(nums);

    std::cout << "Maximum subarray sum: " << result << std::endl;

    return 0;
}